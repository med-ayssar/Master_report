@BOOK{Rum12,
  title = {{Agile Modellierung mit UML : Codegenerierung, Testf{\"a}lle, Refactoring}},
  publisher = {Springer},
  year = {2012},
  author = {Bernhard Rumpe},
  volume = {2nd Edition},
  keywords = {UML, Codegeneration, ModelBasedTesting, Refactoring, SSE}
}

@BOOK{Rum11,
  title = {{Modellierung mit UML}},
  publisher = {Springer},
  year = {2011},
  author = {Bernhard Rumpe},
  volume = {2nd Edition},
  keywords = {UML, SSE}
}

@MISC{SE10,
  title = {{Software Engineering website {\tt http://www.se-rwth.de/}}},
  year = {2010},
  month = {june},
  date = {2010-06-29},
  key = {www},
  mylabel = {www},
  timestamp = {2010.06.29}
}

@MISC{Mon10,
  title = {{MontiCore website {\tt http://monticore.org/}}},
  year = {2010},
  month = {june},
  date = {2010-06-29},
  key = {www},
  mylabel = {www},
  timestamp = {2010.06.29}
}


@MISC{nest,
  title = {{NEST Simulator {\tt https://nest-simulator.readthedocs.io/en}}},
  key = {NS3},
  month = {},
  mylabel = {nest}
}

@MISC{jinja,
  author={Armin Ronacher},
  title={{JINJA}},
  url={https://jinja.palletsprojects.com/en/latest/},
  note= {\url{https://jinja.palletsprojects.com/en/latest/}},
  key = {{Jinja}},
  month = {},
  mylabel = {jinja},
  year={2022}
}

@techreport{perun2018reengineering,
  title={Reengineering {NESTML} with Python and MontiCore},
  author={Perun, Konstantin and Trensch, Guido and Rumpe, Bernhard and Plotnikov, Dimitri and Morrison, Abigail and Blundell, Inga and Eppler, Jochen Martin},
  year={2018},
  institution={JARA-HPC}
}

@MISC{cppyy,
  author={Wim Lavrijsen},
  title={{CPPYY}},
  url={https://cppyy.readthedocs.io/en/latest},
  note= {\url{https://cppyy.readthedocs.io/en/latest}},
  key = {CPPYY},
  month = {},
  mylabel = {cppyy},
  year={2018}
}

@ARTICLE{10.3389/neuro.11.012.2008,
  
AUTHOR={Eppler, Jochen and Helias, Moritz and Muller, Eilif and Diesmann, Markus and Gewaltig, Marc-Oliver},   
	 
TITLE={{PyNEST}: a convenient interface to the {NEST} simulator},      
	
JOURNAL={Frontiers in Neuroinformatics},      
	
VOLUME={2},      
	
YEAR={2009},

PAGES={12},
	  
URL={https://www.frontiersin.org/article/10.3389/neuro.11.012.2008},       
	
DOI={10.3389/neuro.11.012.2008},      
	
ISSN={1662-5196},   
   
ABSTRACT={The neural simulation tool NEST (<monospace>http://www.nest-initiative.org</monospace>) is a simulator for heterogeneous networks of point neurons or neurons with a small number of compartments. It aims at simulations of large neural systems with more than 10<sup>4</sup> neurons and 10<sup>7</sup> to 10<sup>9</sup> synapses. NEST is implemented in C++ and can be used on a large range of architectures from single-core laptops over multi-core desktop computers to super-computers with thousands of processor cores. Python (<monospace>http://www.python.org</monospace>) is a modern programming language that has recently received considerable attention in Computational Neuroscience. Python is easy to learn and has many extension modules for scientific computing (e.g. <monospace>http://www.scipy.org</monospace>). In this contribution we describe PyNEST, the new user interface to NEST. PyNEST combines NEST's efficient simulation kernel with the simplicity and flexibility of Python. Compared to NEST's native simulation language SLI, PyNEST makes it easier to set up simulations, generate stimuli, and analyze simulation results. We describe how PyNEST connects NEST and Python and how it is implemented. With a number of examples, we illustrate how it is used.}
}

@misc{plotnikov2016nestml,
  title={{NESTML}: a modeling language for spiking neurons},
  author={Plotnikov, Dimitri and Rumpe, Bernhard and Blundell, Inga and Ippen, Tammo and Eppler, Jochen Martin and Morrison, Abgail},
  journal={arXiv preprint arXiv:1606.02882},
  year={2016}
}

@misc{linssen_charl_a_p_2022_5784175,
  author       = {Linssen, Charl A.P. and
                  Babu, Pooja N. and
                  Benelhedi, Ayssar and
                  De Schepper, Robin and
                  Fardet, Tanguy and
                  Eppler, Jochen Martin and
                  Rumpe, Bernhard and
                  Morrison, Abigail},
  title        = {{NESTML} 5.0.0},
  month        = may,
  year         = 2022,
  publisher    = {Zenodo},
  version      = {5.0.0},
  doi          = {10.5281/zenodo.5784175},
  url          = {https://doi.org/10.5281/zenodo.5784175}
}

@article{nuzman2006auto,
  title={Auto-vectorization of interleaved data for {SIMD}},
  author={Nuzman, Dorit and Rosen, Ira and Zaks, Ayal},
  journal={ACM SIGPLAN Notices},
  volume={41},
  number={6},
  pages={132--143},
  year={2006},
  publisher={ACM New York, NY, USA}
}

@book{vanderah2020nolte,
  title={Nolte’s The Human Brain E-Book: An Introduction to its Functional Anatomy},
  author={Vanderah, Todd and Gould, Douglas},
  year={2020},
  publisher={Elsevier Health Sciences}
}

@misc{nolte2002human,
  title={The human brain},
  author={Nolte, John},
  journal={An Introduction to Its Functional Anatomy.},
  year={2002},
  pages={672},
  number={},
  volume={},
  publisher={Mosby}
}


@inproceedings{ghosh1997cache,
  title={Cache miss equations: An analytical representation of cache misses},
  author={Ghosh, Somnath and Martonosi, Margaret and Malik, Sharad},
  booktitle={Proceedings of the 11th international conference on Supercomputing},
  pages={317--324},
  year={1997}
}

@article{gewaltig2007nest,
  title={{NEST} (neural simulation tool)},
  author={Gewaltig, Marc-Oliver and Diesmann, Markus},
  journal={Scholarpedia},
  volume={2},
  number={4},
  pages={1430},
  year={2007}
}
@ARTICLE{10.3389/neuro.11.005.2008,
  
AUTHOR={Goodman, Dan and Brette, Romain},   
	 
TITLE={Brian: a simulator for spiking neural networks in Python},      
	
JOURNAL={Frontiers in Neuroinformatics},      
	
VOLUME={2},      
	
YEAR={2008},  

pages={10},    
	  
URL={https://www.frontiersin.org/article/10.3389/neuro.11.005.2008},       
	
DOI={10.3389/neuro.11.005.2008},      
	
ISSN={1662-5196},   
   
ABSTRACT={“Brian” is a new simulator for spiking neural networks, written in Python (http://brian. di.ens.fr). It is an intuitive and highly flexible tool for rapidly developing new models, especially networks of single-compartment neurons. In addition to using standard types of neuron models, users can define models by writing arbitrary differential equations in ordinary mathematical notation. Python scientific libraries can also be used for defining models and analysing data. Vectorisation techniques allow efficient simulations despite the overheads of an interpreted language. Brian will be especially valuable for working on non-standard neuron models not easily covered by existing software, and as an alternative to using Matlab or C for simulations. With its easy and intuitive syntax, Brian is also very well suited for teaching computational neuroscience.}
}

@book{adobe1990postscript,
  title={{PostScript} language reference manual},
  author={Adobe Systems Inc, CORPORATE},
  year={1990},
  publisher={Addison-Wesley Longman Publishing Co., Inc.}
}

@misc{epp,
author = {Eppler, Jochen},
year = {2010},
month = {01},
pages = {},
title = {Architectures for communication between processes and software layers for a simulator for biological neural networks}
}

@article{brunel2000dynamics,
  title={Dynamics of sparsely connected networks of excitatory and inhibitory spiking neurons},
  author={Brunel, Nicolas},
  journal={Journal of computational neuroscience},
  volume={8},
  number={3},
  pages={183--208},
  year={2000},
  publisher={Springer}
}

@ARTICLE{1257420,  author={Izhikevich, E.M.},  journal={IEEE Transactions on Neural Networks},   title={Simple model of spiking neurons},   year={2003},  volume={14},  number={6},  pages={1569-1572},  doi={10.1109/TNN.2003.820440}}





@misc{deepu_rajalekshmi_2021_5508805,
  author       = {Deepu, Rajalekshmi and
                  Spreizer, Sebastian and
                  Trensch, Guido and
                  Terhorst, Dennis and
                  Vennemo, Stine Brekke and
                  Mitchell, Jessica and
                  Linssen, Charl and
                  Mørk, Håkon and
                  Morrison, Abigail and
                  Eppler, Jochen Martin and
                  Kamiji, Nilton Liuji and
                  de Schepper, Robin and
                  Kitayama, Itaru and
                  Kurth, Anno and
                  Morales-Gregorio, Aitor and
                  Nagendra Babu, Pooja and
                  Plesser, Hans Ekkehard},
  title        = {{NEST} 3.1},
  month        = sep,
  year         = 2021,
  publisher    = {Zenodo},
  version      = {3.1},
  doi          = {10.5281/zenodo.5508805},
  url          = {https://doi.org/10.5281/zenodo.5508805}
}

@misc{spreizer_sebastian_2022_6368024,
  author       = {Spreizer, Sebastian and
                  Mitchell, Jessica and
                  Jordan, Jakob and
                  Wybo, Willem and
                  Kurth, Anno and
                  Vennemo, Stine Brekke and
                  Pronold, Jari and
                  Trensch, Guido and
                  Benelhedi, Mohamed Ayssar and
                  Terhorst, Dennis and
                  Eppler, Jochen Martin and
                  Mørk, Håkon and
                  Linssen, Charl and
                  Senk, Johanna and
                  Lober, Melissa and
                  Morrison, Abigail and
                  Graber, Steffen and
                  Kunkel, Susanne and
                  Gutzen, Robin and
                  Plesser, Hans Ekkehard},
  title        = {{NEST} 3.3},
  month        = mar,
  year         = 2022,
  publisher    = {Zenodo},
  version      = {3.2},
  doi          = {10.5281/zenodo.6368024},
  url          = {https://doi.org/10.5281/zenodo.6368024}
}

@misc{10.3389/fninf.2014.00023,
  
AUTHOR={Zaytsev, Yury and Morrison, Abigail},   
	 
TITLE={{CyNEST}: a maintainable Cython-based interface for the {NEST} simulator},      
	
JOURNAL={Frontiers in Neuroinformatics},      
	
VOLUME={8},      
	
YEAR={2014},      
	  
URL={https://www.frontiersin.org/article/10.3389/fninf.2014.00023},       
	
DOI={10.3389/fninf.2014.00023},      
	
ISSN={1662-5196},   
   
ABSTRACT={NEST is a simulator for large-scale networks of spiking point neuron models (Gewaltig and Diesmann, <xref ref-type="bibr" rid="B11">2007</xref>). Originally, simulations were controlled via the Simulation Language Interpreter (SLI), a built-in scripting facility implementing a language derived from PostScript (Adobe Systems, Inc., <xref ref-type="bibr" rid="B1">1999</xref>). The introduction of PyNEST (Eppler et al., <xref ref-type="bibr" rid="B8">2008</xref>), the Python interface for NEST, enabled users to control simulations using Python. As the majority of NEST users found PyNEST easier to use and to combine with other applications, it immediately displaced SLI as the default NEST interface. However, developing and maintaining PyNEST has become increasingly difficult over time. This is partly because adding new features requires writing low-level C++ code intermixed with calls to the Python/C API, which is unrewarding. Moreover, the Python/C API evolves with each new version of Python, which results in a proliferation of version-dependent code branches. In this contribution we present the re-implementation of PyNEST in the Cython language, a superset of Python that additionally supports the declaration of C/C++ types for variables and class attributes, and provides a convenient foreign function interface (FFI) for invoking C/C++ routines (Behnel et al., <xref ref-type="bibr" rid="B2">2011</xref>). Code generation via Cython allows the production of smaller and more maintainable bindings, including increased compatibility with all supported Python releases without additional burden for NEST developers. Furthermore, this novel approach opens up the possibility to support alternative implementations of the Python language at no cost given a functional Cython back-end for the corresponding implementation, and also enables cross-compilation of Python bindings for embedded systems and supercomputers alike.}
}

@ARTICLE{10.3389/fninf.2022.884180,
  
AUTHOR={Feldotto, Benedikt and Eppler, Jochen Martin and Jimenez-Romero, Cristian and Bignamini, Christopher and Gutierrez, Carlos Enrique and Albanese, Ugo and Retamino, Eloy and Vorobev, Viktor and Zolfaghari, Vahid and Upton, Alex and Sun, Zhe and Yamaura, Hiroshi and Heidarinejad, Morteza and Klijn, Wouter and Morrison, Abigail and Cruz, Felipe and McMurtrie, Colin and Knoll, Alois C. and Igarashi, Jun and Yamazaki, Tadashi and Doya, Kenji and Morin, Fabrice O.},   
	 
TITLE={Deploying and Optimizing Embodied Simulations of Large-Scale Spiking Neural Networks on HPC Infrastructure},      
	
JOURNAL={Frontiers in Neuroinformatics},      
	
VOLUME={16},      
	
YEAR={2022},

PAGES={23},
	  
URL={https://www.frontiersin.org/article/10.3389/fninf.2022.884180},       
	
DOI={10.3389/fninf.2022.884180},      
	
ISSN={1662-5196},   
   
ABSTRACT={Simulating the brain-body-environment trinity in closed loop is an attractive proposal to investigate how perception, motor activity and interactions with the environment shape brain activity, and vice versa. The relevance of this embodied approach, however, hinges entirely on the modeled complexity of the various simulated phenomena. In this article, we introduce a software framework that is capable of simulating large-scale, biologically realistic networks of spiking neurons embodied in a biomechanically accurate musculoskeletal system that interacts with a physically realistic virtual environment. We deploy this framework on the high performance computing resources of the EBRAINS research infrastructure and we investigate the scaling performance by distributing computation across an increasing number of interconnected compute nodes. Our architecture is based on requested compute nodes as well as persistent virtual machines; this provides a high-performance simulation environment that is accessible to multi-domain users without expert knowledge, with a view to enable users to instantiate and control simulations at custom scale via a web-based graphical user interface. Our simulation environment, entirely open source, is based on the Neurorobotics Platform developed in the context of the Human Brain Project, and the NEST simulator. We characterize the capabilities of our parallelized architecture for large-scale embodied brain simulations through two benchmark experiments, by investigating the effects of scaling compute resources on performance defined in terms of experiment runtime, brain instantiation and simulation time. The first benchmark is based on a large-scale balanced network, while the second one is a multi-region embodied brain simulation consisting of more than a million neurons and a billion synapses. Both benchmarks clearly show how scaling compute resources improves the aforementioned performance metrics in a near-linear fashion. The second benchmark in particular is indicative of both the potential and limitations of a highly distributed simulation in terms of a trade-off between computation speed and resource cost. Our simulation architecture is being prepared to be accessible for everyone as an EBRAINS service, thereby offering a community-wide tool with a unique workflow that should provide momentum to the investigation of closed-loop embodiment within the computational neuroscience community.}
}


@MISC{introductiontopsychology,
    author = {{Jennifer Walinga}},
    year = {2014},
    url ={\url{https://opentextbc.ca/introductiontopsychology/chapter/3-1-the-neuron-is-the-building-block-of-the-nervous-system/}},
    note= {\url{https://opentextbc.ca/introductiontopsychology/chapter/3-1-the-neuron-is-the-building-block-of-the-nervous-system/}},

  }




@MISC{what-action-potential,
    author = {{ Molecular Devices}},
    year = {2022},
    url = {https://www.moleculardevices.com/applications/patch-clamp-electrophysiology/what-action-potential},
    note= {\url{https://www.moleculardevices.com/applications/patch-clamp-electrophysiology/what-action-potential}},
    
}

@article{faisal2005ion,
  title={Ion-channel noise places limits on the miniaturization of the brain’s wiring},
  author={Faisal, A Aldo and White, John A and Laughlin, Simon B},
  journal={Current Biology},
  volume={15},
  number={12},
  pages={1143--1149},
  year={2005},
  publisher={Elsevier}
}

@book{bondy1976graph,
  title={Graph theory with applications},
  author={Bondy, John Adrian and Murty, Uppaluri Siva Ramachandra and others},
  volume={290},
  year={1976},
  publisher={Macmillan London}
}

@incollection{clarke1994mpi,
  title={The {MPI} message passing interface standard},
  author={Clarke, Lyndon and Glendinning, Ian and Hempel, Rolf},
  booktitle={Programming environments for massively parallel distributed systems},
  pages={213--218},
  year={1994},
  publisher={Springer}
}



@ARTICLE{Gewaltig:NEST,
  author  = {Marc-Oliver Gewaltig and Markus Diesmann},
  title   = {{NEST} (NEural Simulation Tool)},
  journal = {Scholarpedia},
  year    = {2007},
  volume  = {2},
  pages   = {1430},
  number  = {4}
}